<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dessert.role" >


  <select id="selectRoles" parameterType="map" resultType="map" >
    select
      R.ROLEID             roleid,
      R.ROLENAME           rolename,
      R.ROLEDESCRIPTION    roledescription,
      R.ROLETYPE           roletype,
      R.STATUS             status,
      date_format(R.CREATEDATE,'%Y-%m-%d') createdate,
      date_format(R.UPDATEDATE,'%Y-%m-%d') updatedate
    FROM system_role R
    <where>
      <if test="roleid!=null and roleid!=''">
        AND R.ROLEID =#{roleid}
      </if>
      <if test="rolename!=null and rolename!=''">
        AND R.ROLENAME =#{rolename}
      </if>
      <if test="roletype!=null and roletype!=''">
        AND R.ROLETYPE =#{roletype}
      </if>
      <if test="status!=null and status!=''">
        AND R.STATUS =#{status}
      </if>
    </where>
    ORDER BY R.CREATEDATE

  </select>


  <delete id="deleteByPrimaryKey" parameterType="hashmap" >
    delete from system_role
    where ROLEID = #{roleid}
  </delete>

  <insert id="insert" parameterType="hashmap" >
    insert into system_role
    (
      ROLEID,
      ROLENAME,
    <if test="roledescription != null" >
      ROLEDESCRIPTION,
    </if>
      ROLETYPE,
      STATUS,
      CREATEDATE
    )
    values
    (
      #{roleid},
      #{rolename},
    <if test="roledescription != null" >
      #{roledescription},
    </if>
      #{roletype},
      #{status},
      now()
    )
  </insert>


  <update id="update" parameterType="hashmap" >
    update system_role
    <set >
      <if test="rolename != null" >
        ROLENAME = #{rolename},
      </if>
      <if test="roledescription != null" >
        ROLEDESCRIPTION = #{roledescription},
      </if>
      <if test="roletype != null" >
        ROLETYPE = #{roletype},
      </if>
      <if test="status != null" >
        STATUS = #{status},
      </if>
        UPDATEDATE = now()
    </set>
    where ROLEID = #{roleid}
  </update>


  <select id="findResourcessByRole" parameterType="map" resultType="map">
    SELECT
      RR.RMLINKID rmlinkid,
      R.MENUID menuid,
      R.MENUNAME menuname,
      R.MENUTYPE menutype,
      R.MENUORDER menuorder,
      R.PARENTID parentid,
      R.MENULEVEL menulevel,
      R.ACTION  action,
    (SELECT MENUORDER FROM system_resources R1 WHERE R1.MENUID=(SELECT PARENTID FROM system_resources R2 WHERE R2.MENUID=R.PARENTID)) grandfatherorder,
    (SELECT MENUORDER FROM system_resources R3 WHERE R3.MENUID=R.PARENTID) fatherorder,
    (CASE  WHEN menulevel='1' THEN 'true'
    WHEN menulevel='2' THEN 'true' END) open
    FROM SYSTEM_ROLE_RES RR
    LEFT JOIN system_resources R ON R.MENUID = RR.MENUID
    <where>
      <if test="roleid!=null and roleid!=''">
        AND RR.ROLEID =#{roleid}
      </if>
      <if test="menuid!=null and menuid!=''">
        AND RR.MENUID =#{menuid}
      </if>
    </where>
    ORDER BY grandfatherorder ASC,fatherorder ASC,menuorder ASC
  </select>

</mapper>