<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd   
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
       http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
       http://www.springframework.org/schema/mvc    
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
      http://mybatis.org/schema/mybatis-spring 
	http://mybatis.org/schema/mybatis-spring.xsd"
	default-lazy-init="false">
	<context:property-placeholder location="classpath*:/config/setting.properties" />
	<mvc:resources location="/resources/" mapping="/resources/**" />

	<context:component-scan
		base-package="com.dessert.*.service.*,com.dessert.*.*.service.*,com.dessert.*.*.*.service.*,com.dessert.*.controller,com.dessert.*.*.controller,com.dessert.*.*.*.controller" />
	
	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor" />

	<mvc:annotation-driven />
	<tx:annotation-driven transaction-manager="transactionManager" />

	<!--配置拦截器
	<mvc:interceptors>
		<bean id="AuthorityHandlerInterceptor" class=""></bean>
	</mvc:interceptors>-->


	<!--配置数据库-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
		<property name="initialSize" value="${jdbc.initialSize}" />
		<property name="maxActive" value="${jdbc.maxActive}" />
		<property name="maxIdle" value="${jdbc.maxIdle}" />
		<property name="maxWait" value="${jdbc.maxWait}" />
		<property name="maxOpenPreparedStatements" value="300" />
	</bean>

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation" value="classpath:/config/mybatis-config.xml" />
		<property name="mapperLocations" value="classpath*:mapper/*/*_mapper.xml" />
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 事务管理器配置,单数据源事务 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean class="com.dessert.sys.common.dao.DaoClient">
		<property name="sqlSessionFactory" ref="sqlSessionFactory"></property>
	</bean>

	<!-- 配置那些类的方法进行事务管理 -->
	<tx:advice id="testTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="insert*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="add*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="modify*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="delete*" propagation="REQUIRED" read-only="false"
				rollback-for="java.lang.Exception" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="pc"
			expression="execution(* com.dessert.*.service.*.*(..)) or execution(* com.dessert.*.*.service.*.*(..)) or execution(* com.dessert.*.*.*.service.*.*(..))" />
		<aop:advisor advice-ref="testTxAdvice" pointcut-ref="pc" />
	</aop:config>


	<!--控制上传文件-->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大尺寸为20MB -->
		<property name="maxUploadSize">
			<value>20971520</value>
		</property>
	</bean>


	<!--
	<import resource="classpath*:/bean/*-bean.xml" />
	-->

	<!--配置日志-->
	<bean id="log" class="com.dessert.sys.common.interceptor.SystemLoggerInterceptor"></bean>
	<aop:config>
		<aop:aspect id="alog" ref="log">
			<aop:pointcut
				expression="execution(* com.dessert.*.*.*.service.*.*(..)) or execution(* com.dessert.*.*.service.*.*(..))"
				id="logPoint" />
			<aop:after-throwing method="afterThrowingException"
				pointcut-ref="logPoint" throwing="e" />
		</aop:aspect>
	</aop:config>
	<bean id="loggingInitialization"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="ch.qos.logback.ext.spring.LogbackConfigurer" />
		<property name="targetMethod" value="initLogging" />
		<property name="arguments">
			<list>
				<value>classpath:config/log/${log.cfg}_logging.xml</value>
			</list>
		</property>
	</bean>

	<!--
	<context:component-scan
		base-package="" />
	<mybatis:scan
		base-package="" />
	-->

	<bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" />
		<property name="testOnBorrow" value="${redis.testOnBorrow}" />
	</bean>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean
				class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>


	<bean id="connectionFactory"
		class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:password="123456"
		p:pool-config-ref="poolConfig" />
	<!-- p:password="${redis.pass}" <bean id="stringRedisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate"> 
		<property name="connectionFactory" ref="connectionFactory" /> </bean> -->
	<bean id="redisTemplateTool"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass" value="com.dessert.sys.common.tool.SysRedisTool" />
		<property name="targetMethod" value="initRedis" />
		<property name="arguments" ref="redisTemplate" />
	</bean>



	<!-- 配置freeMarker的模板路径 -->
	<bean
			class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
		<property name="templateLoaderPath" value="/WEB-INF/ftl/" />
		<property name="freemarkerSettings">
			<props>
				<prop key="template_update_delay">0</prop>
				<prop key="default_encoding">UTF-8</prop>
				<prop key="locale">zh_CN</prop>
			</props>
		</property>
	</bean>
	<!-- 配置freeMarker视图解析器 -->
	<bean id="viewResolver"
		  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
		<property name="viewClass"
				  value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
		<property name="contentType" value="text/html;charset=utf-8" />
		<property name="cache" value="true" />
		<property name="prefix" value="" />
		<property name="suffix" value=".ftl" />
		<property name="exposeSpringMacroHelpers" value="true" />
		<property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="requestContextAttribute" value="request" />
	</bean>

</beans>
